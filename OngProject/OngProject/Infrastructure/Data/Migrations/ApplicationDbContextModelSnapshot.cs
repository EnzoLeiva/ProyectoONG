// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OngProject.Infrastructure.Data;

namespace OngProject.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OngProject.Core.Models.ActivitiesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Activities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Content from activity 1",
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 514, DateTimeKind.Local).AddTicks(2749),
                            Image = "Image from activity 1",
                            IsDeleted = false,
                            Name = "Activity 1"
                        },
                        new
                        {
                            Id = 2,
                            Content = "Content from activity 2",
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 519, DateTimeKind.Local).AddTicks(1891),
                            Image = "Image from activity 2",
                            IsDeleted = false,
                            Name = "Activity 2"
                        },
                        new
                        {
                            Id = 3,
                            Content = "Content from activity 3",
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 519, DateTimeKind.Local).AddTicks(2190),
                            Image = "Image from activity 3",
                            IsDeleted = false,
                            Name = "Activity 3"
                        },
                        new
                        {
                            Id = 4,
                            Content = "Content from activity 4",
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 519, DateTimeKind.Local).AddTicks(2233),
                            Image = "Image from activity 4",
                            IsDeleted = false,
                            Name = "Activity 4"
                        },
                        new
                        {
                            Id = 5,
                            Content = "Content from activity 5",
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 519, DateTimeKind.Local).AddTicks(2271),
                            Image = "Image from activity 5",
                            IsDeleted = false,
                            Name = "Activity 5"
                        },
                        new
                        {
                            Id = 6,
                            Content = "Content from activity 6",
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 519, DateTimeKind.Local).AddTicks(2319),
                            Image = "Image from activity 6",
                            IsDeleted = false,
                            Name = "Activity 6"
                        },
                        new
                        {
                            Id = 7,
                            Content = "Content from activity 7",
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 519, DateTimeKind.Local).AddTicks(2355),
                            Image = "Image from activity 7",
                            IsDeleted = false,
                            Name = "Activity 7"
                        },
                        new
                        {
                            Id = 8,
                            Content = "Content from activity 8",
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 519, DateTimeKind.Local).AddTicks(2390),
                            Image = "Image from activity 8",
                            IsDeleted = false,
                            Name = "Activity 8"
                        },
                        new
                        {
                            Id = 9,
                            Content = "Content from activity 9",
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 519, DateTimeKind.Local).AddTicks(2425),
                            Image = "Image from activity 9",
                            IsDeleted = false,
                            Name = "Activity 9"
                        },
                        new
                        {
                            Id = 10,
                            Content = "Content from activity 10",
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 519, DateTimeKind.Local).AddTicks(2465),
                            Image = "Image from activity 10",
                            IsDeleted = false,
                            Name = "Activity 10"
                        });
                });

            modelBuilder.Entity("OngProject.Core.Models.CategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("OngProject.Core.Models.CommentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.Property<int>("post_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("OngProject.Core.Models.ContactsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("OngProject.Core.Models.MemberModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FacebookUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("InstagramUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkedinUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("OngProject.Core.Models.NewsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(65535)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("OngProject.Core.Models.OrganizationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AboutUsText")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Adress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("FacebookUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("InstagramUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkedinUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<string>("WelcomeText")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("OngProject.Core.Models.RoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 520, DateTimeKind.Local).AddTicks(236),
                            Description = "Admin User",
                            IsDeleted = false,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 520, DateTimeKind.Local).AddTicks(972),
                            Description = "Standard User",
                            IsDeleted = false,
                            Name = "Standard"
                        });
                });

            modelBuilder.Entity("OngProject.Core.Models.SlideModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("OrganizationId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("OngProject.Core.Models.TestimonialsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasMaxLength(65535)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Testimonials");
                });

            modelBuilder.Entity("OngProject.Core.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("photo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("roleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("email")
                        .IsUnique();

                    b.HasIndex("roleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 526, DateTimeKind.Local).AddTicks(1364),
                            IsDeleted = false,
                            email = "mail1@Mail.com",
                            firstName = "User 1",
                            lastName = "AdminUser 1",
                            password = "3b612c75a7b5048a435fb6ec81e52ff92d6d795a8b5a9c17070f6a63c97a53b2",
                            photo = "Test.jpg",
                            roleId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 526, DateTimeKind.Local).AddTicks(2680),
                            IsDeleted = false,
                            email = "mail2@Mail.com",
                            firstName = "User 2",
                            lastName = "AdminUser 2",
                            password = "3b612c75a7b5048a435fb6ec81e52ff92d6d795a8b5a9c17070f6a63c97a53b2",
                            photo = "Test.jpg",
                            roleId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 526, DateTimeKind.Local).AddTicks(2854),
                            IsDeleted = false,
                            email = "mail3@Mail.com",
                            firstName = "User 3",
                            lastName = "AdminUser 3",
                            password = "3b612c75a7b5048a435fb6ec81e52ff92d6d795a8b5a9c17070f6a63c97a53b2",
                            photo = "Test.jpg",
                            roleId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 526, DateTimeKind.Local).AddTicks(2913),
                            IsDeleted = false,
                            email = "mail4@Mail.com",
                            firstName = "User 4",
                            lastName = "AdminUser 4",
                            password = "3b612c75a7b5048a435fb6ec81e52ff92d6d795a8b5a9c17070f6a63c97a53b2",
                            photo = "Test.jpg",
                            roleId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 526, DateTimeKind.Local).AddTicks(2967),
                            IsDeleted = false,
                            email = "mail5@Mail.com",
                            firstName = "User 5",
                            lastName = "AdminUser 5",
                            password = "3b612c75a7b5048a435fb6ec81e52ff92d6d795a8b5a9c17070f6a63c97a53b2",
                            photo = "Test.jpg",
                            roleId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 526, DateTimeKind.Local).AddTicks(3024),
                            IsDeleted = false,
                            email = "mail6@Mail.com",
                            firstName = "User 6",
                            lastName = "AdminUser 6",
                            password = "3b612c75a7b5048a435fb6ec81e52ff92d6d795a8b5a9c17070f6a63c97a53b2",
                            photo = "Test.jpg",
                            roleId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 526, DateTimeKind.Local).AddTicks(3104),
                            IsDeleted = false,
                            email = "mail7@Mail.com",
                            firstName = "User 7",
                            lastName = "AdminUser 7",
                            password = "3b612c75a7b5048a435fb6ec81e52ff92d6d795a8b5a9c17070f6a63c97a53b2",
                            photo = "Test.jpg",
                            roleId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 526, DateTimeKind.Local).AddTicks(3159),
                            IsDeleted = false,
                            email = "mail8@Mail.com",
                            firstName = "User 8",
                            lastName = "AdminUser 8",
                            password = "3b612c75a7b5048a435fb6ec81e52ff92d6d795a8b5a9c17070f6a63c97a53b2",
                            photo = "Test.jpg",
                            roleId = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 526, DateTimeKind.Local).AddTicks(3210),
                            IsDeleted = false,
                            email = "mail9@Mail.com",
                            firstName = "User 9",
                            lastName = "AdminUser 9",
                            password = "3b612c75a7b5048a435fb6ec81e52ff92d6d795a8b5a9c17070f6a63c97a53b2",
                            photo = "Test.jpg",
                            roleId = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 526, DateTimeKind.Local).AddTicks(3292),
                            IsDeleted = false,
                            email = "mail10@Mail.com",
                            firstName = "User 10",
                            lastName = "AdminUser 10",
                            password = "3b612c75a7b5048a435fb6ec81e52ff92d6d795a8b5a9c17070f6a63c97a53b2",
                            photo = "Test.jpg",
                            roleId = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 526, DateTimeKind.Local).AddTicks(3345),
                            IsDeleted = false,
                            email = "mail11@Mail.com",
                            firstName = "User 11",
                            lastName = "RegularUser 11",
                            password = "a61a8adf60038792a2cb88e670b20540a9d6c2ca204ab754fc768950e79e7d36",
                            photo = "Test.jpg",
                            roleId = 2
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 526, DateTimeKind.Local).AddTicks(3395),
                            IsDeleted = false,
                            email = "mail12@Mail.com",
                            firstName = "User 12",
                            lastName = "RegularUser 12",
                            password = "a61a8adf60038792a2cb88e670b20540a9d6c2ca204ab754fc768950e79e7d36",
                            photo = "Test.jpg",
                            roleId = 2
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 526, DateTimeKind.Local).AddTicks(3533),
                            IsDeleted = false,
                            email = "mail13@Mail.com",
                            firstName = "User 13",
                            lastName = "RegularUser 13",
                            password = "a61a8adf60038792a2cb88e670b20540a9d6c2ca204ab754fc768950e79e7d36",
                            photo = "Test.jpg",
                            roleId = 2
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 526, DateTimeKind.Local).AddTicks(3586),
                            IsDeleted = false,
                            email = "mail14@Mail.com",
                            firstName = "User 14",
                            lastName = "RegularUser 14",
                            password = "a61a8adf60038792a2cb88e670b20540a9d6c2ca204ab754fc768950e79e7d36",
                            photo = "Test.jpg",
                            roleId = 2
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 526, DateTimeKind.Local).AddTicks(3636),
                            IsDeleted = false,
                            email = "mail15@Mail.com",
                            firstName = "User 15",
                            lastName = "RegularUser 15",
                            password = "a61a8adf60038792a2cb88e670b20540a9d6c2ca204ab754fc768950e79e7d36",
                            photo = "Test.jpg",
                            roleId = 2
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 526, DateTimeKind.Local).AddTicks(3684),
                            IsDeleted = false,
                            email = "mail16@Mail.com",
                            firstName = "User 16",
                            lastName = "RegularUser 16",
                            password = "a61a8adf60038792a2cb88e670b20540a9d6c2ca204ab754fc768950e79e7d36",
                            photo = "Test.jpg",
                            roleId = 2
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 526, DateTimeKind.Local).AddTicks(3765),
                            IsDeleted = false,
                            email = "mail17@Mail.com",
                            firstName = "User 17",
                            lastName = "RegularUser 17",
                            password = "a61a8adf60038792a2cb88e670b20540a9d6c2ca204ab754fc768950e79e7d36",
                            photo = "Test.jpg",
                            roleId = 2
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 526, DateTimeKind.Local).AddTicks(3842),
                            IsDeleted = false,
                            email = "mail18@Mail.com",
                            firstName = "User 18",
                            lastName = "RegularUser 18",
                            password = "a61a8adf60038792a2cb88e670b20540a9d6c2ca204ab754fc768950e79e7d36",
                            photo = "Test.jpg",
                            roleId = 2
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 526, DateTimeKind.Local).AddTicks(3892),
                            IsDeleted = false,
                            email = "mail19@Mail.com",
                            firstName = "User 19",
                            lastName = "RegularUser 19",
                            password = "a61a8adf60038792a2cb88e670b20540a9d6c2ca204ab754fc768950e79e7d36",
                            photo = "Test.jpg",
                            roleId = 2
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2021, 8, 5, 10, 28, 3, 526, DateTimeKind.Local).AddTicks(3973),
                            IsDeleted = false,
                            email = "mail20@Mail.com",
                            firstName = "User 20",
                            lastName = "RegularUser 20",
                            password = "a61a8adf60038792a2cb88e670b20540a9d6c2ca204ab754fc768950e79e7d36",
                            photo = "Test.jpg",
                            roleId = 2
                        });
                });

            modelBuilder.Entity("OngProject.Core.Models.NewsModel", b =>
                {
                    b.HasOne("OngProject.Core.Models.CategoryModel", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OngProject.Core.Models.UserModel", b =>
                {
                    b.HasOne("OngProject.Core.Models.RoleModel", "RoleModel")
                        .WithMany()
                        .HasForeignKey("roleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoleModel");
                });
#pragma warning restore 612, 618
        }
    }
}
